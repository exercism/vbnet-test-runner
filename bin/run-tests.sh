#!/usr/bin/env sh

# Synopsis:
# Test the test runner by running it against a predefined set of solutions 
# with an expected output.

# Output:
# Outputs the diff of the expected test results against the actual test results
# generated by the test runner.

# Example:
# ./bin/run-tests.sh

exit_code=0

# Iterate over all test directories
for test_dir in tests/*; do
    test_dir_name=$(basename "${test_dir}")
    test_dir_path=$(realpath "${test_dir}")
    results_file_path="${test_dir_path}/results.json"
    expected_results_file_path="${test_dir_path}/expected_results.json"
    expected_results_original_file_path="${expected_results_file_path}.original"
    tmp_results_file_path="/tmp/results.json"

    bin/run.sh "${test_dir_name}" "${test_dir_path}" "${test_dir_path}"

    # Normalize the results file
    sed -i -E \
      -e 's/Duration: [0-9]+ ms//g' \
      -e 's/ \[0-9]+ ms]//g' \
      -e "s~${test_dir_path}~/solution~g" \
      "${results_file_path}"

    # TODO: this is a temporary fix around the fact that tests are not returned in order
    # and the .message property can thus not be checked
    if [ "${test_dir_name}" == "example-all-fail" ] ||
       [ "${test_dir_name}" == "example-partial-fail" ]; then
      cp "${expected_results_file_path}" "${expected_results_original_file_path}"
      actual_message=$(jq -r '.message' "${results_file_path}")
      jq --arg m "${actual_message}" '.message = $m' "${expected_results_original_file_path}" > "${tmp_results_file_path}" && mv "${tmp_results_file_path}" "${expected_results_file_path}"
    fi

    echo "${test_dir_name}: comparing results.json to expected_results.json"
    diff "${results_file_path}" "${expected_results_file_path}"

    if [ $? -ne 0 ]; then
        exit_code=1
    fi

    # TODO: this is a temporary fix around the fact that tests are not returned in order
    # and the .message property can thus not be checked
    if [ "${test_dir_name}" == "example-all-fail" ] ||
       [ "${test_dir_name}" == "example-partial-fail" ]; then
       mv "${expected_results_original_file_path}" "${expected_results_file_path}"
    fi
done

exit ${exit_code}
